version: '2'
services:
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    networks:
      - kafka-network
    ports:
      - "19092:19092"  # External access
    volumes:
      - ./secrets:/etc/kafka/secrets
      - ./data/kafka:/var/lib/kafka/data  # Persist Kafka data
    environment:
      # KRaft mode configurations
      KAFKA_KRAFT_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29092
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:19092,INTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:19092,INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:SSL,INTERNAL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      # KRaft storage settings
      KAFKA_LOG_DIRS: /var/lib/kafka/data

      # Additional Kafka configurations
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

      # SSL Configuration
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.server.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: test_password
      KAFKA_SSL_KEY_PASSWORD: test_password
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: test_password
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""

      # Additional SSL settings
      KAFKA_SSL_CLIENT_AUTH: required

      # Enable SSL Debugging
      KAFKA_OPTS: "-Djavax.net.debug=ssl:handshake"

    command: >
      sh -c "
        # Initialize KRaft storage if not already done
        if [ ! -f /var/lib/kafka/data/kafka_metadata ]; then
          echo 'Initializing KRaft storage...'
          kafka-storage format -t $$(uuidgen) -c /etc/kafka/kraft/server.properties
        fi
        # Start Kafka in KRaft mode
        kafka-server-start /etc/kafka/kraft/server.properties
      "

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  schemaregistry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schemaregistry
    networks:
      - kafka-network
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    volumes:
      - ./secrets:/etc/kafka/secrets
    environment:
      SCHEMA_REGISTRY_HOST_NAME: localhost
      SCHEMA_REGISTRY_LISTENERS: https://0.0.0.0:8081

      # Connect to Kafka using the internal listener address without the listener name
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SSL

      # SSL configuration for connecting to Kafka
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/schemaregistry.server.truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: test_password
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/schemaregistry.server.keystore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: test_password
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: test_password
      SCHEMA_REGISTRY_KAFKASTORE_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""

      # SSL configuration for Schema Registry's own listener
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/schemaregistry.server.truststore.jks
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: test_password
      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/schemaregistry.server.keystore.jks
      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: test_password
      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: test_password
      SCHEMA_REGISTRY_SSL_CLIENT_AUTHENTICATION: 'NONE'

      SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: https
      SCHEMA_REGISTRY_DEBUG: 'true'

      # Enable SSL Debugging
      KAFKA_OPTS: "-Djavax.net.debug=ssl:handshake"

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  kafka-network:
    driver: bridge