# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

#on:
#  workflow_run:
#    workflows: ["Build and Publish Main"]
#    types:
#      - completed

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
#      - name: Check Build Main Success
#        uses: actions/download-artifact@v2
#        with:
#          name: success
#
#      - name: Confirm Build Main success
#        run: |
#          if [[ ! -f "success.txt" ]]; then
#          echo "No success notification sent from Build Main, Exiting"
#          exit 1
#          fi

      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
      - name: Generate documentation
        run: |
          ./gradlew dokkaHtmlMultiModule
        env:
          GPR_USER: ${{ vars.GPR_USER }}
          GPR_READ_KEY: ${{ secrets.GPR_READ_KEY }}
          GPR_WRITE_KEY: ${{ secrets.GPR_WRITE_KEY }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ARMOR_BASE64: ${{ secrets.SIGNING_KEY_ARMOR_BASE64 }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
          
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: build/dokka/jekyllMultiModule
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
