name: Build Main and Release
on:
  push:
    branches:
      - main
jobs:
  build-main:
    strategy:
      matrix:
        include:
          - project_prefix: ktor-server
            image_name: ubuntu-latest
          - project_prefix: ktor-client
            image_name: macos-latest
    permissions:
      contents: write
      pull-requests: read
    name: Build Main - ${{ matrix.project_prefix }}
    runs-on: ${{ matrix.image_name }}
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Detect modified subprojects
        uses: ./.github/actions/detect-modified-projects
        id: detect-modified-subprojects
        with:
          project_prefixes: ${{ matrix.project_prefix }}

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Execute gradle tasks on ${{ steps.detect-modified-subprojects.outputs.modified_projects == '' && 'root' || steps.detect-modified-subprojects.outputs.modified_projects }}
        id: execute-gradle-tasks-on-projects
        uses: ./.github/actions/execute-gradle-tasks-on-projects
        with:
          projects: ${{ steps.detect-modified-subprojects.outputs.modified_projects }}
          tasks: clean,build
          parent_project_task: koverLog --scan -xtest --stacktrace
          execute_on_root_anyway: false
        env:
          GPR_USER: ${{ vars.GPR_USER }}
          GPR_READ_TOKEN: ${{ secrets.GPR_READ_TOKEN }}
          GPR_WRITE_TOKEN: ${{ secrets.GPR_WRITE_TOKEN }}

      - name: Upload Build Artifacts-${{ matrix.project_prefix }}
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: |
            build/libs
            ${{ matrix.project_prefix }}-*/build/libs

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build-main
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download ktor-server Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts-ktor-server
          path: build-artifacts

      - name: Download ktor-client Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts-ktor-client
          path: build-artifacts

      - name: Extract version
        id: get_version
        run: |
          echo "VERSION_NAME=$(grep "version" gradle.properties | awk -F'=' '{print $2}')" >> $GITHUB_ENV

      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          generateReleaseNotes: true
          tag: ${{ env.VERSION_NAME }}
          artifacts: build-artifacts/**/*.jar
