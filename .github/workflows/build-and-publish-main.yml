name: Build and Publish Main

on:
  push:
    branches:
      - main
jobs:
  build-main:
    strategy:
      matrix:
        include:
          - project_prefix: ktor-server
            image_name: ubuntu-latest
          - project_prefix: ktor-client
            image_name: macos-latest
    permissions:
      contents: write
      pull-requests: read
    name: Build Main - ${{ matrix.project_prefix }}
    runs-on: ${{ matrix.image_name }}
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Detect modified subprojects
        uses: ./.github/actions/detect-modified-projects
        id: detect-modified-subprojects
        with:
          project_prefixes: ${{ matrix.project_prefix }}
          required_projects: ${{ matrix.project_prefix == 'ktor-server' && 'ktor-server-kafka,ktor-server-rate-limiting' || 'ktor-client-circuit-breaker' }}

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Execute gradle tasks on ${{ steps.detect-modified-subprojects.outputs.modified_projects == '' && 'root' || steps.detect-modified-subprojects.outputs.modified_projects }}
        id: execute-gradle-tasks-on-projects
        uses: ./.github/actions/execute-gradle-tasks-on-projects
        with:
          projects: ${{ steps.detect-modified-subprojects.outputs.modified_projects }}
          tasks: clean publish --scan --stacktrace
        env:
          GPR_USER: ${{ vars.GPR_USER }}
          GPR_READ_KEY: ${{ secrets.GPR_READ_KEY }}
          GPR_WRITE_KEY: ${{ secrets.GPR_WRITE_KEY }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ARMOR_BASE64: ${{ secrets.SIGNING_KEY_ARMOR_BASE64 }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}

  generate-docs:
    needs: build-main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Generate documentation
        run: |
          ./gradlew dokkaHtmlJekyllModule
        env:
          GPR_USER: ${{ vars.GPR_USER }}
          GPR_READ_KEY: ${{ secrets.GPR_READ_KEY }}
          GPR_WRITE_KEY: ${{ secrets.GPR_WRITE_KEY }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ARMOR_BASE64: ${{ secrets.SIGNING_KEY_ARMOR_BASE64 }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}

      - name: Publish documentation
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          FOLDER: build/dokka/jekyllMultiModule
