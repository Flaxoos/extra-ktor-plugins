version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - kafka-network
    hostname: zookeeper

    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:22888:23888

    extra_hosts:
      - "moby:127.0.0.1"

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - kafka-network
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"  # External access
    volumes:
      - ./secrets:/etc/kafka/secrets
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:22181
      KAFKA_BROKER_ID: 1

      # Define listeners with unique names
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:19092,INTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:19092,INTERNAL://kafka:29092

      # Map listener names to security protocols
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:SSL,INTERNAL:SSL

      # Specify the inter-broker listener
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      # SSL Configuration (Corrected)
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.server.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: test_password
      KAFKA_SSL_KEY_PASSWORD: test_password
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: test_password
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""

      # Additional configurations
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

      # Enable SSL Debugging
    #      KAFKA_OPTS: "-Djavax.net.debug=ssl:handshake"

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  schemaregistry:
    image: confluentinc/cp-schema-registry:latest
    networks:
      - kafka-network
    hostname: schemaregistry
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    volumes:
      - ./secrets:/etc/kafka/secrets
    environment:
      SCHEMA_REGISTRY_HOST_NAME: localhost
      SCHEMA_REGISTRY_LISTENERS: https://0.0.0.0:8081

      # Connect to Kafka using the internal listener address without the listener name
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SSL

      # SSL configuration for connecting to Kafka (Corrected)
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/schemaregistry.server.truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: test_password
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/schemaregistry.server.keystore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: test_password
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: test_password
      SCHEMA_REGISTRY_KAFKASTORE_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""

      # SSL configuration for Schema Registry's own listener
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/schemaregistry.server.truststore.jks
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: test_password
      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/schemaregistry.server.keystore.jks
      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: test_password
      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: test_password
      SCHEMA_REGISTRY_SSL_CLIENT_AUTHENTICATION: 'NONE'

      SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: https
      SCHEMA_REGISTRY_DEBUG: 'true'

      # Enable SSL Debugging
    #      KAFKA_OPTS: "-Djavax.net.debug=ssl:handshake"

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  kafka-network:
    driver: bridge
